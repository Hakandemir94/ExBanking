pipeline {
    agent any

    tools {
        nodejs 'ExBanking_NodeJS' // The NodeJS version configured in Jenkins
    }

    environment {
        BUILD_URL = "http://localhost:8080/job/${env.JOB_NAME}/${env.BUILD_NUMBER}/artifact/reports/"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Hakandemir94/ExBanking.git', branch: 'master'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }
        
        stage('Stop MongoDB') {
            steps {
                bat 'net stop MongoDB || exit 0'
            }
        }

        stage('Start MongoDB') {
            steps {
                bat 'net start MongoDB'
                sleep time: 5, unit: 'SECONDS' 
            }
        }
        
        stage('Start Mock API') {
            steps {
                bat 'start /B node src/mockApi.js'
                sleep time: 5, unit: 'SECONDS' 
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    def packageJson = readFile('package.json')
                    def newPackageJson = packageJson.replaceAll('"urlForTestFiles": ".*"', "\"urlForTestFiles\": \"${BUILD_URL}\"")
                    writeFile(file: 'package.json', text: newPackageJson)
                }
                bat 'npm test'
            }
            post {
                always {
                    bat 'dir reports'
                    bat 'IF EXIST reports\\junit.xml (echo JUnit report found) ELSE (echo JUnit report not found)'
                    junit 'reports/junit.xml' // Publish test results
                    archiveArtifacts artifacts: 'reports/**', allowEmptyArchive: true
		    archiveArtifacts artifacts: 'test/backend/createdUsers.log', allowEmptyArchive: true
                }
            }
        }

        stage('Run Load Tests') {
            steps {
                bat 'artillery run load-test.yml'
            }
        }
    }

    post {
        always {
            publishHTML(target: [
                reportName: 'Test Report',
                reportDir: 'reports',
                reportFiles: 'report.html',
                //keepAll: true
            ])
            // Stop the mock API server
            bat 'taskkill /F /IM node.exe /T || exit 0'
            // Stop MongoDB
            bat 'net stop MongoDB || exit 0'
        }
    }
}
